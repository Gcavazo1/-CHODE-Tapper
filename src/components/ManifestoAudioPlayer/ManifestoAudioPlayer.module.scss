@use '../../styles/variables' as *;
@use '../../styles/mixins' as *;
@use 'sass:color';

.audioPlayerContainer {
    align-items: center;
  }

.audioPlayerContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 1rem 0;
  width: 90%;
}

.controlsContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem; /* Space between button and selector */
  width: 100%;
  max-width: 400px; /* Max width for the controls area */
  padding: 0; /* Changed from padding: 0 1rem; to remove horizontal padding */
  box-sizing: border-box; /* Ensure padding doesn't expand beyond max-width */
}

.playButton {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  padding: 0.75rem 1.5rem;
  background-color: rgba(var(--color-black-void-rgb), 0.85);
  color: $color-pink-girth;
  border: 2px solid $color-pink-girth;
  border-radius: 50px;
  font-family: $font-family-accent;
  font-weight: bold;
  font-size: 1rem;
  cursor: pointer;
  transition: all 0.3s ease-in-out;
  box-shadow: 0 0 10px $color-pink-girth, 0 0 20px $color-cyber-blue-glow;
  backdrop-filter: blur(5px);
  width: 100%; /* Make button take full width of its container */
  text-transform: uppercase;
  letter-spacing: 1px;
  box-sizing: border-box;
  
  &:hover {
    background-color: rgba(var(--color-pink-girth-rgb), 0.2);
    color: $color-white-signal;
    border-color: $color-gold-degen;
    box-shadow: 0 0 15px $color-gold-degen, 0 0 30px $color-pink-girth-glow;
    transform: scale(1.03); /* Slightly less scale for non-floating */
  }
  
  &:active {
    transform: translateY(1px) scale(1.01); /* Adjusted active state */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
    background-color: rgba(var(--color-black-void-rgb), 0.7);
    border-color: $color-grey-grime;
    color: $color-grey-grime;
    box-shadow: none;
  }
  
  &.loading {
    border-color: $color-cyber-blue;
    box-shadow: 0 0 10px $color-cyber-blue, 0 0 20px rgba(var(--color-cyber-blue-rgb), 0.7);
    animation: pulseLoading 1.5s infinite;
  }
  
  &.playing {
    border-color: $color-green-slime;
    box-shadow: 0 0 10px $color-green-slime, 0 0 20px rgba(var(--color-green-slime-rgb), 0.7);

    &:hover {
      border-color: $color-white-signal;
      box-shadow: 0 0 15px $color-white-signal, 0 0 30px $color-green-slime-glow;
    }
  }
}

.playIconContainer, .pauseIconContainer {
  display: flex;
  align-items: center;
  justify-content: center;
}

.playIcon {
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 8px 0 8px 14px;
  border-color: transparent transparent transparent currentColor;
}

.pauseIcon {
  width: 14px;
  height: 16px;
  position: relative;
  
  &:before, &:after {
    content: '';
    position: absolute;
    width: 5px;
    height: 16px;
    background-color: currentColor;
    top: 0;
  }
  
  &:before {
    left: 0;
  }
  
  &:after {
    right: 0;
  }
}

.loadingText {
  font-size: 0.9rem;
  color: currentColor;
}

.buttonText {
  margin-left: 0.25rem;
}

.voiceSelectorContainer {
  display: flex;
  flex-direction: column; /* Stack label and select */
  align-items: center; /* Center items */
  width: 100%;
}

.voiceSelectorLabel {
  font-size: 0.9rem;
  color: $color-green-slime;
  margin-bottom: 0.5rem;
}

.voiceSelector {
  padding: 0.65rem 0.75rem;
  border-radius: 8px;
  border: 1px solid $color-grey-grime;
  background-color: rgba(var(--color-black-void-rgb), 0.7);
  color: $color-white-signal;
  font-family: $font-family-main;
  font-size: 0.9rem;
  width: 100%;
  cursor: pointer;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
  box-sizing: border-box;

  &:hover {
    border-color: $color-pink-girth;
  }

  &:focus {
    outline: none;
    border-color: $color-cyber-blue;
    box-shadow: 0 0 0 2px rgba(var(--color-cyber-blue-rgb), 0.4);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    background-color: rgba(var(--color-black-void-rgb), 0.5);
    border-color: $color-grey-grime;
  }
}

.errorMessage {
  margin-top: 1rem;
  padding: 1rem;
  background-color: rgba(255, 82, 82, 0.1);
  border: 1px solid rgba(255, 82, 82, 0.3);
  border-radius: 8px;
  width: 100%;
  max-width: 400px;
  
  p {
    color: $color-red-warning;
    margin: 0 0 0.5rem;
    font-size: 0.9rem;
    text-align: center;
    
    &:last-child {
      margin-bottom: 0;
    }
  }
  
  .troubleshooting {
      color: $color-grey-grime;
    font-size: 0.85rem;
    font-style: italic;
  }
}

@keyframes pulse {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
  100% {
    opacity: 1;
  }
}

@keyframes pulseLoading {
  0% {
    box-shadow: 0 0 10px $color-cyber-blue, 0 0 20px rgba(var(--color-cyber-blue-rgb), 0.5);
  }
  50% {
    box-shadow: 0 0 15px $color-cyber-blue, 0 0 25px rgba(var(--color-cyber-blue-rgb), 0.7);
  }
  100% {
    box-shadow: 0 0 10px $color-cyber-blue, 0 0 20px rgba(var(--color-cyber-blue-rgb), 0.5);
  }
} 